{"version":3,"sources":["components/CourseCards/Cards.jsx","redux/course-reducer.js","components/CourseCards/CourseCards.jsx","components/PopUp/PopUp.jsx","components/Header/Header.jsx","components/LoadingSkeleton/LoadingSkeleton.jsx","components/LoadingSkeleton/Loading.jsx","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["Cards","props","filterCourses","courses","forEach","item","course","id","name","modules","activeId","status","module","push","title","length","className","map","card","onClick","selectCard","activeModuleId","e","stopPropagation","selectModuleAndCard","SELECT_CARD","SELECT_MODULE","SELECT_MODULE_AND_CARD","CLOSING_POP_UP","UPDATE_SEARCH_TEXT","SET_COURSES_PAGE","SET_IS_LOADING","initialSate","isLoading","searchText","selectedCourseId","isPopUp","selectModuleAC","moduleId","type","courseReducer","state","action","data","cardId","text","connect","coursePage","searchTextToLowerCase","toLowerCase","filter","includes","some","selectCourseId","dispatch","selectCardAC","selectModuleAndCardAC","selectModule","array","i","statusBlocks","arr","result","str","unique","closingPopUp","updateSearchText","searchElement","React","createRef","onChange","current","value","ref","placeholder","SkeletonPulse","styled","div","Skeleton","Loading","index","setIsLoading","setCoursesPage","useEffect","fetchData","a","setTimeout","dataCourses","error","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","store","createStore","window","__store__","renderEntireTree","ReactDOM","render","StrictMode","document","getElementById","getState","subscribe"],"mappings":"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","file":"static/js/main.ec469558.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Cards = (props) => {\r\n\r\n    let filterCourses = [];\r\n\r\n    props.courses.forEach( item => {\r\n        let course = {\r\n            id: item.id,\r\n            name: item.name,\r\n            modules: [],\r\n            activeId: item.id + props.status,\r\n        }\r\n        item.modules.forEach(module => {\r\n            if(module.status === props.status) {\r\n                course.modules.push({\r\n                    id: module.id,\r\n                    title: module.title,\r\n                    status: module.status,\r\n                })\r\n            }\r\n        })\r\n        if(course.modules.length !== 0){\r\n            filterCourses.push(course)\r\n        }\r\n\r\n    })\r\n    return <div className=\"cards\">\r\n        {filterCourses.map(card => {\r\n            return <div className={props.activeId === card.activeId ? \"card active\" : \"card\"}\r\n                        key={card.id}\r\n                        onClick={() => {props.selectCard(card.id, card.activeId)}}>\r\n                <div className=\"title\"> {card.name}</div>\r\n                <div className=\"card-items\">\r\n                    {card.modules.map(module => {\r\n                        return <div className={props.activeModuleId === (module.id + \".\" + card.id)\r\n                            ? \"card-item active\"\r\n                            : \"card-item\"} key={module.id}\r\n                                    onClick={(e) => {\r\n                                        e.stopPropagation()\r\n                                        props.selectModuleAndCard((module.id + \".\" + card.id), card.id, card.activeId)\r\n                                    }}>\r\n                            <div className=\"item-title\">{module.title}</div>\r\n                        </div>\r\n                    })}\r\n                </div>\r\n            </div>\r\n        })}\r\n    </div>\r\n\r\n}\r\n\r\nexport default Cards;","const SELECT_CARD = 'SELECT_CARD';\r\nconst SELECT_MODULE = 'SELECT_MODULE';\r\nconst SELECT_MODULE_AND_CARD = 'SELECT_MODULE_AND_CARD';\r\nconst CLOSING_POP_UP = 'CLOSING_POP_UP';\r\nconst UPDATE_SEARCH_TEXT = 'UPDATE_SEARCH_TEXT';\r\nconst SET_COURSES_PAGE = 'SET_COURSES_PAGE';\r\nconst SET_IS_LOADING = 'SET_IS_LOADING';\r\n\r\nlet initialSate = {\r\n    courses: [],\r\n    isLoading: true,\r\n    searchText: '',\r\n    selectedCourseId: null,\r\n    activeId: \"\",\r\n    activeModuleId: null,\r\n    isPopUp: false,\r\n}\r\n\r\nconst courseReducer = (state = initialSate, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_COURSES_PAGE: {\r\n            return {\r\n                ...state,\r\n                courses: action.data,\r\n            }\r\n        }\r\n        case SET_IS_LOADING: {\r\n            return {\r\n                ...state,\r\n                isLoading: action.data,\r\n            }\r\n        }\r\n        case SELECT_CARD: {\r\n            return {\r\n                ...state,\r\n                selectedCourseId: action.id,\r\n                activeId: action.activeId,\r\n                activeModuleId: null,\r\n                isPopUp: true,\r\n            }\r\n        }\r\n        case SELECT_MODULE_AND_CARD: {\r\n            return {\r\n                ...state,\r\n                activeModuleId: action.moduleId,\r\n                selectedCourseId: action.cardId,\r\n                activeId: action.activeId,\r\n                isPopUp: true,\r\n            }\r\n        }\r\n        case SELECT_MODULE: {\r\n            return {\r\n                ...state,\r\n                activeModuleId: action.moduleId,\r\n                activeId: \"\",\r\n            }\r\n        }\r\n        case CLOSING_POP_UP: {\r\n            return {\r\n                ...state,\r\n                isPopUp: false,\r\n            }\r\n        }\r\n        case UPDATE_SEARCH_TEXT: {\r\n            return {\r\n                ...state,\r\n                searchText: action.text,\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport const selectCardAC = (id, activeId) => ({type: SELECT_CARD, id, activeId,});\r\nexport const selectModuleAndCardAC = (moduleId, cardId, activeId) =>{\r\n    return {type: SELECT_MODULE_AND_CARD, moduleId, cardId, activeId};\r\n};\r\nexport const selectModuleAC = (moduleId) => ({type: SELECT_MODULE, moduleId});\r\nexport const closingPopUpAC = () => ({type: CLOSING_POP_UP});\r\nexport const updateSearchText = (text) => ({type: UPDATE_SEARCH_TEXT, text});\r\nexport const setCoursesPage = (data) => ({type: SET_COURSES_PAGE, data});\r\nexport const setIsLoading = (data) => ({type: SET_IS_LOADING, data});\r\n\r\n\r\nexport default courseReducer;","import React from \"react\";\r\nimport Cards from \"./Cards\";\r\nimport {connect} from \"react-redux\";\r\nimport {selectCardAC, selectModuleAC, selectModuleAndCardAC} from \"../../redux/course-reducer\";\r\n\r\nconst CourseCards = (props) => {\r\n    let courses = props.courses;\r\n    let array = [];\r\n    courses.forEach( i => {\r\n        i.modules.forEach(item => {\r\n            array.push(item.status)\r\n        })\r\n    });\r\n    function unique(arr) {\r\n        let result = [];\r\n\r\n        for (let str of arr) {\r\n            if (!result.includes(str)) {\r\n                result.push(str);\r\n            }\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    let statusBlocks = unique(array);\r\n\r\n\r\n    return <div className={props.isPopUp ? \"cards-wrapper\" : \"cards-wrapper active\"}>\r\n        { statusBlocks.map(status => {\r\n            return <div className=\"cards-block\" key={status}>\r\n                <div className=\"status\">{status}</div>\r\n                <Cards status={status} courses={props.courses}\r\n                       selectCard={props.selectCard}\r\n                       selectCourseId={props.selectCourseId}\r\n                       activeId={props.activeId}\r\n                       selectModuleAndCard={props.selectModuleAndCard}\r\n                       activeModuleId={props.activeModuleId}\r\n                    {...props}\r\n                />\r\n            </div>\r\n        })}\r\n\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    let courses = state.coursePage.courses;\r\n    let searchTextToLowerCase = state.coursePage.searchText.toLowerCase()\r\n\r\n    return {\r\n        courses: courses.filter(course => {\r\n            if(course.name.toLowerCase().includes(searchTextToLowerCase)){\r\n                return true\r\n            } else {\r\n            return course.modules.some(module => {\r\n                return module.title.toLowerCase().includes(searchTextToLowerCase)})\r\n            }\r\n\r\n        }),\r\n        selectCourseId: state.coursePage.selectedCourseId,\r\n        activeId: state.coursePage.activeId,\r\n        activeModuleId: state.coursePage.activeModuleId,\r\n        isPopUp: state.coursePage.isPopUp,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        selectCard: (cardId, activeId) => {\r\n            dispatch(selectCardAC(cardId, activeId))\r\n        },\r\n        selectModuleAndCard: (moduleId, cardId, activeId) =>{\r\n            dispatch(selectModuleAndCardAC(moduleId, cardId, activeId))\r\n        },\r\n        selectModule: (moduleId) =>{\r\n            dispatch(selectModuleAC(moduleId))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CourseCards);","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {closingPopUpAC, selectModuleAC} from \"../../redux/course-reducer\";\r\n\r\nconst PopUp = (props) => {\r\n\r\n    if(props.selectCourseId) {\r\n\r\n        let course;\r\n        props.courses.forEach(item => {\r\n            if(item.id === props.selectCourseId){\r\n                course = item\r\n            }\r\n        })\r\n\r\n        return <div className={props.isPopUp ? \"pop-up active\" : \"pop-up\"}>\r\n        <span onClick={() => {\r\n            props.closingPopUp()\r\n        }\r\n        } className={\"icon\"}> ✖ </span>\r\n            <div className=\"title\">{course.name}</div>\r\n            <div className=\"card-items\">\r\n                {course.modules.map(module => {\r\n                    let activeModuleId = module.id + \".\" + course.id;\r\n                    return <div className={props.activeModuleId === activeModuleId\r\n                        ? \"card-item active\"\r\n                        : \"card-item\"}\r\n                                key={module.id}\r\n                                onClick={() => {props.selectModule(activeModuleId)}}>\r\n                        <div className=\"item-title\">{module.title}</div>\r\n                        <div className=\"item-status\">{module.status}</div>\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    return <div></div>\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        selectModule: (moduleId) =>{\r\n            dispatch(selectModuleAC(moduleId))\r\n        },\r\n        closingPopUp: () => {\r\n            dispatch(closingPopUpAC())\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        courses: state.coursePage.courses,\r\n        selectCourseId: state.coursePage.selectedCourseId,\r\n        activeModuleId: state.coursePage.activeModuleId,\r\n        isPopUp: state.coursePage.isPopUp,\r\n    }\r\n}\r\n\r\nexport default  connect(mapStateToProps, mapDispatchToProps)(PopUp);","import React from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {updateSearchText} from \"../../redux/course-reducer\";\r\n\r\nconst Header = (props) => {\r\n\r\n    let searchElement = React.createRef();\r\n\r\n    const onChangeInputSearch = () => {\r\n\r\n        let text = searchElement.current.value;\r\n        props.updateSearchText(text);\r\n    }\r\n    return <header className=\"App-header\">\r\n        <input onChange={onChangeInputSearch}\r\n               ref={searchElement}\r\n               value={props.searchText}\r\n               className=\"input\" type=\"text\" placeholder={\"Search\"}/>\r\n               <div className=\"total-items\">\r\n                   <div>Total items</div>\r\n                   <div>(83)</div>\r\n               </div>\r\n    </header>\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        searchText: state.coursePage.searchText\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {updateSearchText})(Header);","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst SkeletonPulse = styled.div`\r\n  display: inline-block;\r\n  width: 100%;\r\n  min-height: 100%;\r\n  animation: pulse 1.2s ease-in infinite;\r\n\r\n  @keyframes pulse {\r\n    0% {\r\n      background-color: rgba(165, 165, 165, .1);\r\n    }\r\n    50% {\r\n      background-color: rgba(165, 165, 165, .3);\r\n    }\r\n    100% {\r\n      background-color: rgba(165, 165, 165, .1)\r\n    }\r\n  }\r\n`\r\n\r\nexport const Skeleton = (props) => {\r\n    return <SkeletonPulse/>\r\n}\r\n","import React from 'react';\r\nimport {Skeleton} from \"./LoadingSkeleton\";\r\n\r\nconst Loading = () => {\r\n    let statusBlocks = [\"\", \"\", \"\", \"\"];\r\n    return <div className=\"App\">\r\n        <header className=\"App-header\">\r\n            <div></div>\r\n            <div className=\"total-items\" >\r\n                <Skeleton/>\r\n            </div>\r\n        </header>\r\n        <div className=\"App-body\">\r\n            <div className=\"content\">\r\n                <div className=\"cards-wrapper active\">\r\n                    { statusBlocks.map((status, id) => {\r\n                        return <div className=\"cards-block\" key={id}>\r\n                            <div className=\"status loadingStatus\"><Skeleton/></div>\r\n                            <div className=\"cards\">\r\n                                {[\"\", \"\",].map((card, i) => {\r\n                                    return <div className={\"card\"} key={i}>\r\n                                        <div className=\"title loadingTitle\"><Skeleton/></div>\r\n                                        <div className=\"card-items\">\r\n                                            {[\"\", \"\", \"\", ].map((module, index) => {\r\n                                                return <div className={\"loadingModule\"} key={index}>\r\n                                                    <div className=\"item-title loading-item-title\"><Skeleton/></div>\r\n                                                </div>\r\n                                            })}\r\n                                        </div>\r\n                                    </div>\r\n                                })}\r\n                            </div>\r\n                        </div>\r\n                    })}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Loading;","import './App.css';\nimport CourseCards from \"./components/CourseCards/CourseCards\";\nimport PopUp from \"./components/PopUp/PopUp\";\nimport Header from \"./components/Header/Header\";\nimport React, { useEffect} from \"react\";\nimport {connect} from \"react-redux\";\nimport dataCourses from \"./data.json\"\nimport {setCoursesPage, setIsLoading} from \"./redux/course-reducer\";\nimport Loading from \"./components/LoadingSkeleton/Loading\";\n\nfunction App(props) {\n\n    useEffect(() => {\n\n        const fetchData = async () => {\n            try {\n                setTimeout(() => {\n                    props.setCoursesPage(dataCourses.courses)\n                    props.setIsLoading(false);\n                },2000);\n\n            } catch (error) {\n\n            }\n        }\n        if(props.courses.length === 0){\n            fetchData();\n        };\n\n    }, [])\n\n    if(props.isLoading){\n        return <Loading/>\n    }\n\n    return (\n        <div className=\"App\">\n            <Header/>\n            <div className=\"App-body\">\n                <div className=\"content\">\n                    <CourseCards/>\n                    <PopUp/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        courses: state.coursePage.courses,\n        isLoading: state.coursePage.isLoading,\n    }\n}\n\nexport default connect(mapStateToProps, {setIsLoading, setCoursesPage})(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, createStore} from 'redux';\r\nimport courseReducer from './course-reducer';\r\n\r\nlet reducers = combineReducers({\r\n    coursePage: courseReducer,\r\n});\r\n\r\nconst store = createStore(reducers);\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default  store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redux/store\";\nimport {Provider} from \"react-redux\";\n\nlet renderEntireTree = (state) => {\n    ReactDOM.render(\n        <React.StrictMode>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </React.StrictMode>,\n        document.getElementById('root')\n    );\n}\n\nrenderEntireTree(store.getState());\n\nstore.subscribe(renderEntireTree)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}